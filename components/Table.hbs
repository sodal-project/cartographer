<div>
  <form
    hx-post="/mod/table-demo/filter/"
    hx-target="closest #main"
    hx-swap="innerHTML"
  >
    <div class="flex mb-4">

      <!-- Sort -->
      <div
        class="relative border-r border-gray-700 pr-4 mr-4"
        x-data="{ open: false }"
        @click.away="open = false"
      >
        <button
          class="flex gap-1 items-center inline-block h-7 px-3 rounded-full border border-indigo-500 text-indigo-400 bg-indigo-900 bg-opacity-30"
          type="button"
          @click="open = !open"
        >
         <span class="relative h-3.5 text-indigo-400 inline-block">
          
            {{#if (eq data.sortDirection 'ascending')}}
              {{> icons/ArrowUp }}
            {{else}}
              {{> icons/ArrowDown }}
            {{/if}}
          </span>
          <span class="text-sm capitalize">{{data.sortProperty}}</span>
          <span class="relative w-3.5 h-3.5 text-indigo-400 inline-block">
            {{> icons/AngleDown }}
          </span>
        </button>

        <!-- Sort Form -->
        <div
          class="absolute z-10 top-9 left-1/2 w-px h-px"
          x-show="open"
        >
          <div
            class="transform -translate-x-1/2 w-96 border border-gray-700 bg-gray-800 shadow-xl rounded-lg p-5"
          >
            <div class="flex gap-3 items-center w-full">
              {{> FormSelect name="sortProperty" options=data.properties selected=data.sortProperty }}
              {{> FormSelect name="sortDirection" options=data.sortDirections selected=data.sortDirection }}
            </div>
            {{> FormSubmit label="Save" }}
          </div>
        </div>
      </div>

      <!-- Active Filters -->
      <div class="flex gap-3 mr-2">
        {{#each data.filters}}
          {{> TableFilter
            property=this.property
            condition=this.condition
            value=this.value
            properties=../data.properties
            filterConditions=../data.filterConditions
          }}
        {{/each}}
      </div>

      <!-- New Filter -->
      <div 
        class="relative"
        x-data="{ open: false }"
        @click.away="open = false"
      >
        <button
          class="inline-block h-7 px-2 text-gray-500 text-sm rounded-md hover:bg-gray-800"
          type="button"
          @click="open = !open"
        >
          <span>+ Add filter</span>
        </button>
      
        <!-- New Filter Form -->
        <div
          class="absolute z-10 top-9 left-1/2 w-px h-px"
          x-show="open"
        >
          <div
            class="transform -translate-x-1/2 w-96 border border-gray-700 bg-gray-800 shadow-xl rounded-lg p-5"
          >
            <div class="flex gap-3 items-center w-full mb-3">
              {{> FormSelect name="filterNewProperty" options=data.properties }}
              {{> FormSelect name="filterNewCondition" options=data.filterConditions }}
            </div>
            <input type="text" name="filterNewTerm" class="text-white bg-gray-900 border border-gray-700 rounded-md p-1 px-3 w-full" />
            {{> FormSubmit label="Save" }}
          </div>
        </div>

      </div>
    </div>
  </form>

  <table class="min-w-full" x-data="tableCheckbox()" x-init="initializeTotalCheckboxes()">
    
    <thead class="sticky top-0">
      <tr>
        <th
          class="sticky top-0 p-4 bg-gray-900"
        >
          <div
            class="absolute bottom-0 left-0 right-0 border-b border-gray-700"
          ></div>
          <input
            type="checkbox"
            x-model="selectAll"
            @click="toggleSelectAll()"
            x-ref="headerCheckbox"
          >
          <p x-show="isIndeterminate">hello</p>
        </th>
        {{#each data.properties}}
          <th
            class="sticky top-0 p-4 text-left text-sm font-semibold bg-gray-900 text-white"
          >
            <div
              class="absolute bottom-0 left-0 right-0 border-b border-gray-700"
            ></div>
            <span onClick="sort" class="cursor-pointer">
              {{this.label}}
            </span>
          </th>
        {{/each}}
      </tr>
    </thead>
    <tbody class="divide-y divide-gray-800">
      {{#each data.rows}}
        <tr class="hover:bg-indigo-600 hover:bg-opacity-20">
          <td class="p-4">
            <input type="checkbox"  value={{this.id}} x-model="selected" @change="updateSelectAllState()">
          </td>
          {{#each this}}
            <td
              class="whitespace-nowrap p-4 text-sm font-medium text-white"
            >
              {{this}}
            </td>
          {{/each}}
        </tr>
      {{/each}}
    </tbody>
  </table>
</div>

<script>
function tableCheckbox() {
  return {
    selectAll: false,
    selected: [],
    totalCheckboxes: 0,

    initializeTotalCheckboxes() {
      // Set `totalCheckboxes` based on the number of rows in the tbody
      this.totalCheckboxes = document.querySelectorAll('tbody tr').length;
    },

    toggleSelectAll() {
      this.selected = this.selectAll ? [] : Array.from({ length: this.totalCheckboxes }, (_, i) => (i + 1).toString());
      this.updateSelectAllState();
    },

    updateSelectAllState() {
      const checkedCount = this.selected.length;
      this.selectAll = checkedCount === this.totalCheckboxes;
      
      // Set the `indeterminate` property directly on the checkbox
      this.$refs.headerCheckbox.indeterminate = checkedCount > 0 && checkedCount < this.totalCheckboxes;
    }
  }
}
</script>
