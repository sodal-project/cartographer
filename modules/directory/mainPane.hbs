<div class="p-8" x-data="directoryPane">
  <div class="flex justify-between items-start mb-6">
    {{> Headline title="Directory Module" }}
    <div class="flex gap-3">
      <!-- Link Button -->
      <div class="relative">
        <button 
          @click="showLinkModal = true"
        class="bg-indigo-600 py-1 px-4 rounded text-sm text-white transition-colors whitespace-nowrap"
        :class="hasDirectorySelections ? 'hover:bg-indigo-700' : 'opacity-50 cursor-not-allowed'"
        :disabled="!hasDirectorySelections"
      >
          Link Personas
        </button>
      </div>

      <!-- Participant Button & Form -->
      <div class="relative">
        <button
          @click="toggleForm('participant')"
          class="bg-indigo-600 py-1 px-4 rounded text-sm text-white hover:bg-indigo-700 transition-colors"
        >
          Add Participant
        </button>
        
        <div 
          x-show="showParticipantForm"
          x-transition
          @click.away="showParticipantForm = false"
          class="absolute right-0 z-10 mt-2 p-4 bg-gray-800 rounded shadow-lg border border-gray-700"
          style="width: 450px;"
        >
          <form
            hx-post="/mod/directory/addParticipant/"
            hx-target="closest #main"
            hx-swap="innerHTML"
            @submit="showParticipantForm = false"
          >
            {{> FormText label="First Name" name="firstName" value="" }}
            {{> FormText label="Last Name" name="lastName" value="" }}
            {{> FormText label="Handle" name="handle" value="" }}
            {{> FormSubmit label="Add Participant" }}
          </form>
        </div>
      </div>

      <!-- Activity Button & Form -->
      <div class="relative">
        <button
          @click="toggleForm('activity')"
          class="bg-indigo-600 py-1 px-4 rounded text-sm text-white hover:bg-indigo-700 transition-colors"
        >
          Add Activity
        </button>
        
        <div 
          x-show="showActivityForm"
          x-transition
          @click.away="showActivityForm = false"
          class="absolute right-0 z-10 mt-2 p-4 bg-gray-800 rounded shadow-lg border border-gray-700"
          style="width: 300px;"
        >
          <form
            hx-post="/mod/directory/addActivity/"
            hx-target="closest #main"
            hx-swap="innerHTML"
            @submit="showActivityForm = false"
          >
            {{> FormText label="Name" name="name" value="" }}
            {{> FormSubmit label="Add Activity" }}
          </form>
        </div>
      </div>

      <!-- Add Raw Persona Button & Form -->
      <div class="relative">
        <button
          @click="toggleForm('addPersona')"
          class="bg-indigo-600 py-1 px-4 rounded text-sm text-white h-[30px] hover:bg-indigo-700 transition-colors"
        >
          Add Raw Persona
        </button>
        
        <div 
          x-show="showAddPersonaForm"
          x-transition
          @click.away="showAddPersonaForm = false"
          class="absolute right-0 z-10 mt-2 p-4 bg-gray-800 rounded shadow-lg border border-gray-700"
          style="width: 350px;"
        >
          <h2 class="text-white text-lg mb-4">Add Raw Persona</h2>
          <form
            hx-post="/mod/directory/addPersona"
            hx-target="closest #main"
            hx-swap="innerHTML"
            @submit="showAddPersonaForm = false"
          >
            <p class="text-gray-400 text-sm mb-4">Use caution, you can break things.</p>
            {{> FormText label="UPN" name="upn" value="" }}
            {{> FormSubmit label="Add Persona" }}
          </form>
        </div>
      </div>

      <form
        hx-ext="download-csv"
        hx-post="/mod/directory/backup/download/"
      >
        <button
          type="submit"
          class="bg-indigo-600 py-1 px-4 rounded text-sm text-white h-[30px] hover:bg-indigo-700 transition-colors"
        >
          Backup
        </button>
      </form>

      <!-- Restore Button & Form -->
      <div class="relative">
        <button
          @click="toggleForm('restore')"
          class="bg-indigo-600 py-1 px-4 rounded text-sm text-white h-[30px] hover:bg-indigo-700 transition-colors"
        >
          Restore
        </button>
        
        <div 
          x-show="showRestoreForm"
          x-transition
          @click.away="showRestoreForm = false"
          class="absolute right-0 z-10 mt-2 p-4 bg-gray-800 rounded shadow-lg border border-gray-700"
          style="width: 350px;"
        >
          <h2 class="text-white text-lg mb-4">Restore Directory</h2>
          <form
            hx-encoding="multipart/form-data"
            hx-post="/mod/directory/restore/upload"
            hx-target="closest #main"
            hx-swap="innerHTML"
            @submit="showRestoreForm = false"
          >
            {{> FormFilePicker label="JSON File" name="file" }}
            {{> FormSubmit label="Restore" }}
          </form>
        </div>
      </div>
    </div>
  </div>

  <div class="relative">
    <div class="w-full">
      <h2 class="text-white text-lg mb-4">Directory</h2>
      
      <div @change="watchSelections()">
        {{> PersonaTable data=directory.tableData }}
      </div>
    </div>
  </div>

  <!-- Sliding Link Panel -->
  <div 
    x-show="showLinkModal" 
    x-transition:enter="transition ease-out duration-300"
    x-transition:enter-start="translate-x-full"
    x-transition:enter-end="translate-x-0"
    x-transition:leave="transition ease-in duration-300"
    x-transition:leave-start="translate-x-0"
    x-transition:leave-end="translate-x-full"
    :style="{ width: panelWidth + 'px' }"
    class="fixed top-0 right-0 h-full bg-gray-900 shadow-lg overflow-y-auto z-50"
    @click.away="showLinkModal = false"
  >
    <!-- Resize Handle -->
    <div
      class="absolute left-0 top-0 bottom-0 w-1 cursor-ew-resize bg-gray-700 hover:bg-indigo-500"
      @mousedown="startResize"
    ></div>

    <!-- Panel Header -->
    <div class="border-b border-gray-700 px-6 py-4">
      <div class="flex justify-between items-center">
        <h2 class="text-white text-lg font-medium">Link Personas</h2>
        <button 
          @click="showLinkModal = false"
          class="text-gray-400 hover:text-white transition-colors"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Link Controls -->
    <div class="px-6 py-4 border-b border-gray-700 space-y-4">
      <!-- Link Button -->
      <div>
        <button 
          @click="linkData()" 
          class="bg-indigo-600 py-2 px-4 rounded text-white text-sm hover:bg-indigo-700 transition-colors"
          :class="hasPersonaSelections ? '' : 'opacity-50 cursor-not-allowed'"
          :disabled="!hasPersonaSelections || !isValidForm()"
        >
          Link Selected
        </button>
      </div>

      <!-- Confidence and Level Selection -->
      <div class="flex gap-6">
        <!-- Confidence Radio Group -->
        <div class="shrink-0">
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Confidence Level
          </label>
          <div class="flex gap-4">
            <label class="flex items-center whitespace-nowrap">
              <input
                type="radio"
                name="confidence"
                value=".75"
                class="text-indigo-600 focus:ring-indigo-500 h-4 w-4 mr-2"
              >
              <span class="text-gray-300">Proven</span>
            </label>
            <label class="flex items-center whitespace-nowrap">
              <input
                type="radio"
                name="confidence"
                value=".5"
                class="text-indigo-600 focus:ring-indigo-500 h-4 w-4 mr-2"
                checked
              >
              <span class="text-gray-300">Asserted</span>
            </label>
            <label class="flex items-center whitespace-nowrap">
              <input
                type="radio"
                name="confidence"
                value=".25"
                class="text-indigo-600 focus:ring-indigo-500 h-4 w-4 mr-2"
              >
              <span class="text-gray-300">Inferred</span>
            </label>
          </div>
        </div>

        <!-- Level Select -->
        <div class="grow">
          <label class="block text-sm font-medium text-gray-300 mb-2">
            Relationship Level
          </label>
          <select 
            name="level" 
            class="bg-gray-800 text-gray-300 rounded px-3 py-2 w-full focus:ring-2 focus:ring-indigo-500 focus:outline-none border border-gray-700"
          >
            <option value="" disabled selected>Select a level</option>
            <option value="" disabled class="font-semibold">WILL - Physical/Authority Control</option>
            <option value="1">1 - POSSESS: Physical control</option>
            <option value="2">2 - DIRECT: Immediate authority</option>
            <option value="3">3 - GOVERN: Indirect authority</option>
            <option value="4">4 - INFORM: Authority considerations</option>
            <option value="" disabled class="font-semibold">BE - Identity/Existence</option>
            <option value="5">5 - ALIAS: Presentation of</option>
            <option value="6">6 - REALIZE: Cause to exist now</option>
            <option value="7">7 - DEFINE: Establish nature</option>
            <option value="8">8 - DESCRIBE: Communicate nature</option>
            <option value="" disabled class="font-semibold">DO - Interaction Control</option>
            <option value="9">9 - ADMIN: Unrestricted control</option>
            <option value="10">10 - MANAGE: Change interaction permissions</option>
            <option value="11">11 - ACT_AS: Cause external interaction</option>
            <option value="12">12 - ACCESS: Cause self interaction</option>
          </select>
        </div>
      </div>
    </div>

    <!-- Persona Table -->
    <div class="px-6 py-4 border-l border-gray-700">
      <h3 class="text-white text-md font-medium mb-4">Select Personas to Link</h3>
      <div @change="watchSelections()">
        {{> PersonaTable data=personas.tableData }}
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('alpine:init', () => {
  Alpine.data('directoryPane', () => ({
    LEVEL: {
      POSSESS: 1,   // WILL has physical control
      DIRECT: 2,    // WILL has immediate authority
      GOVERN: 3,    // WILL has indirect authority
      INFORM: 4,    // WILL introduce authority considerations
      ALIAS: 5,     // BE is presentation of
      REALIZE: 6,   // BE cause to exist right now
      DEFINE: 7,    // BE establish nature of being
      DESCRIBE: 8,  // BE communicate nature of being
      ADMIN: 9,     // DO unrestricted control
      MANAGE: 10,   // DO change which personas can interact
      ACT_AS: 11,   // DO cause to interact with other personas
      ACCESS: 12,   // DO cause to interact with my persona
    },
    hasDirectorySelections: false,
    hasPersonaSelections: false,
    showLinkModal: false,
    panelWidth: 800, // Default width in pixels
    isResizing: false,
    startX: 0,
    startWidth: 0,
    showActivityForm: false,
    showParticipantForm: false,
    showRestoreForm: false,
    showAddPersonaForm: false,
    
    init() {
      this.showLinkModal = false;
      this.showActivityForm = false;
      this.showParticipantForm = false;
      this.showRestoreForm = false;
      this.showAddPersonaForm = false;
      this.watchSelections(); // Initial check
      
      // Add global mouse event listeners for resizing
      window.addEventListener('mousemove', (e) => this.handleResize(e));
      window.addEventListener('mouseup', () => this.stopResize());
    },

    startResize(e) {
      this.isResizing = true;
      this.startX = e.clientX;
      this.startWidth = this.panelWidth;
      
      // Prevent text selection while resizing
      document.body.style.userSelect = 'none';
    },

    handleResize(e) {
      if (!this.isResizing) return;
      
      const diff = this.startX - e.clientX;
      const newWidth = this.startWidth + diff;
      
      // Set minimum and maximum width constraints
      this.panelWidth = Math.min(Math.max(newWidth, 300), window.innerWidth - 100);
    },

    stopResize() {
      this.isResizing = false;
      document.body.style.userSelect = '';
    },

    isValidForm() {
      const levelSelect = document.querySelector('select[name="level"]');
      const confidenceRadio = document.querySelector('input[name="confidence"]:checked');
      return levelSelect?.value && confidenceRadio?.value && this.hasPersonaSelections;
    },

    watchSelections() {
      const directoryForm = document.getElementById('directory-table-form');
      const personaForm = document.getElementById('persona-table-form');
      
      this.hasDirectorySelections = directoryForm?.querySelectorAll('input[type=checkbox]:checked').length > 0;
      this.hasPersonaSelections = personaForm?.querySelectorAll('input[type=checkbox]:checked').length > 0;
    },

    linkData() {
      const directoryTableForm = document.getElementById('directory-table-form');
      const personaTableForm = document.getElementById('persona-table-form');
      const levelSelect = document.querySelector('select[name="level"]');
      const confidenceRadio = document.querySelector('input[name="confidence"]:checked');

      if (!this.isValidForm() || !directoryTableForm || !personaTableForm) {
        console.error('Required form elements are missing or invalid.');
        return;
      }

      const directoryTableData = new FormData(directoryTableForm);
      const personaTableData = new FormData(personaTableForm);

      const selectedDirectoryUpns = [...directoryTableData.values()];
      const selectedPersonaUpns = [...personaTableData.values()];

      const payload = {
        directoryUpns: selectedDirectoryUpns,
        personaUpns: selectedPersonaUpns,
        level: parseInt(levelSelect.value),
        confidence: parseFloat(confidenceRadio.value)
      };

      htmx.ajax('POST', '/mod/directory/linkPersonas/', {
        target: '#main',
        swap: 'innerHTML',
        values: payload,
      });
      
      this.showLinkModal = false;
    },

    toggleForm(formType) {
      this.showActivityForm = false;
      this.showParticipantForm = false;
      this.showRestoreForm = false;
      this.showAddPersonaForm = false;

      if (formType === 'activity') {
        this.showActivityForm = !this.showActivityForm;
      } else if (formType === 'participant') {
        this.showParticipantForm = !this.showParticipantForm;
      } else if (formType === 'restore') {
        this.showRestoreForm = !this.showRestoreForm;
      } else if (formType === 'addPersona') {
        this.showAddPersonaForm = !this.showAddPersonaForm;
      }
    },
  }))
});
</script>

